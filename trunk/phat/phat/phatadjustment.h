/* Generated by GOB (v2.0.12)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include <stdlib.h>
#include <string.h>
#include <stdio.h>

#include <gtk/gtk.h>
#include <glib.h>

#ifndef __PHAT_ADJUSTMENT_H__
#define __PHAT_ADJUSTMENT_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define PHAT_TYPE_ADJUSTMENT	(phat_adjustment_get_type())
#define PHAT_ADJUSTMENT(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), phat_adjustment_get_type(), PhatAdjustment)
#define PHAT_ADJUSTMENT_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), phat_adjustment_get_type(), PhatAdjustment const)
#define PHAT_ADJUSTMENT_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), phat_adjustment_get_type(), PhatAdjustmentClass)
#define PHAT_IS_ADJUSTMENT(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), phat_adjustment_get_type ())

#define PHAT_ADJUSTMENT_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), phat_adjustment_get_type(), PhatAdjustmentClass)

/* Private structure type */
typedef struct _PhatAdjustmentPrivate PhatAdjustmentPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_PHAT_ADJUSTMENT__
#define __TYPEDEF_PHAT_ADJUSTMENT__
typedef struct _PhatAdjustment PhatAdjustment;
#endif
struct _PhatAdjustment {
	GtkAdjustment __parent__;
	/*< private >*/
	PhatAdjustmentPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _PhatAdjustmentClass PhatAdjustmentClass;
struct _PhatAdjustmentClass {
	GtkAdjustmentClass __parent__;
};


/*
 * Public methods
 */
GType	phat_adjustment_get_type	(void);
GtkAdjustment * 	phat_adjustment_new	(void);
gfloat * 	phat_adjustment_get_watch_float	(PhatAdjustment * self);
void 	phat_adjustment_set_watch_float	(PhatAdjustment * self,
					gfloat * watch_float);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
